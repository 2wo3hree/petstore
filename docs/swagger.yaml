basePath: /
definitions:
  repo_internal_model.ListUsersResponse:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/repo_internal_model.User'
        type: array
    type: object
  repo_internal_model.User:
    properties:
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample API server for managing users.
  title: User Management API
  version: "1.0"
paths:
  /api/users:
    get:
      description: возвращает список всех пользователей, с указанием количества пользователей
        в ответе и пагинацией (параметры limit и offset)
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repo_internal_model.ListUsersResponse'
        "500":
          description: Internal error
          schema:
            type: string
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Создать нового пользователя
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/repo_internal_model.User'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /api/users/{id}:
    delete:
      description: Мягкое удаление пользователя (проставляется deleted_at)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete user
      tags:
      - users
    get:
      description: Получить пользователя по ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repo_internal_model.User'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Обновить имя и email пользователя по ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/repo_internal_model.User'
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update user
      tags:
      - users
schemes:
- http
swagger: "2.0"
