basePath: /
definitions:
  petstore_internal_models.Author:
    properties:
      books:
        items:
          $ref: '#/definitions/petstore_internal_models.Book'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  petstore_internal_models.AuthorCount:
    properties:
      author:
        $ref: '#/definitions/petstore_internal_models.Author'
      count:
        type: integer
    type: object
  petstore_internal_models.Book:
    properties:
      author:
        $ref: '#/definitions/petstore_internal_models.Author'
      author_id:
        type: integer
      id:
        type: integer
      title:
        type: string
    type: object
  petstore_internal_models.CreateAuthorRequest:
    properties:
      name:
        type: string
    type: object
  petstore_internal_models.CreateBookRequest:
    properties:
      author_id:
        type: integer
      title:
        type: string
    type: object
  petstore_internal_models.CreateUserRequest:
    properties:
      name:
        example: Иван Иванов
        type: string
    type: object
  petstore_internal_models.ListBooksResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/petstore_internal_models.Book'
        type: array
      total:
        type: integer
    type: object
  petstore_internal_models.ListUsersResponse:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/petstore_internal_models.User'
        type: array
    type: object
  petstore_internal_models.User:
    properties:
      id:
        type: integer
      name:
        type: string
      rented_books:
        items:
          $ref: '#/definitions/petstore_internal_models.Book'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample API server for petStores.
  title: PetStore API
  version: "1.0"
paths:
  /authors:
    get:
      consumes:
      - application/json
      parameters:
      - description: Max items
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/petstore_internal_models.Author'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      parameters:
      - description: Only author name
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/petstore_internal_models.CreateAuthorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new author
      tags:
      - authors
  /authors/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.Author'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get author by ID
      tags:
      - authors
  /books:
    get:
      parameters:
      - description: Max items
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.ListBooksResponse'
        "500":
          description: Internal error
          schema:
            type: string
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      parameters:
      - description: Book payload
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/petstore_internal_models.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Add a new book
      tags:
      - books
  /books/{id}:
    get:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.Book'
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
      summary: Get book by ID
      tags:
      - books
  /library/issue/{userId}/{bookId}:
    post:
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User or Book not found
          schema:
            type: string
        "409":
          description: Book already issued
          schema:
            type: string
      summary: Issue a book to a user
      tags:
      - library
  /library/return/{userId}/{bookId}:
    post:
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: No active rental
          schema:
            type: string
      summary: Return a book from a user
      tags:
      - library
  /library/top:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/petstore_internal_models.AuthorCount'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List top authors by rentals
      tags:
      - library
  /users:
    get:
      parameters:
      - description: Max items
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.ListUsersResponse'
        "500":
          description: internal error
          schema:
            type: string
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User name only
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/petstore_internal_models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /users/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.User'
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
      summary: Get user by ID
      tags:
      - users
  /users/{id}/rentals:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/petstore_internal_models.User'
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
      summary: Get user with their rented books
      tags:
      - users
schemes:
- http
swagger: "2.0"
